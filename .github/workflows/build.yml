name: Build
on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        settings:
          - os: ubuntu-latest
            platform: linux
            dtarget: x86_64-linux-gnu

          - os: macos-latest
            platform: darwin
            dtarget: x86_64-macos
          
          - os: windows-latest
            platform: windows
            dtarget: x86_64-windows
    runs-on: ${{ matrix.settings.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      # For setup
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.9.1

      - name: Setup Bun
        uses: xhyrom/setup-bun@v0.1.7
        if: matrix.settings.platform != 'windows'
        with:
          bun-version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Uname
        if: matrix.settings.platform != 'windows'
        run: uname -a

      - name: Init
        run: make init

      #Â Build
      - name: Build installer
        run: make dtarget=${{ matrix.settings.dtarget }} build-installer
      
      - name: Upload installer Linux/darwin
        uses: actions/upload-artifact@v3
        if: matrix.settings.platform != 'windows'
        with:
          name: installer-${{ matrix.settings.platform }}-amd64
          path: packages/installer/zig-out/bin/installer

      - name: Upload installer Windows
        uses: actions/upload-artifact@v3
        if: matrix.settings.platform == 'windows'
        with:
          name: installer-${{ matrix.settings.platform }}-amd64
          path: packages/installer/zig-out/bin/installer.exe

      - name: Build injector
        run: make dtarget=${{ matrix.settings.dtarget }} build-injector
      
      - name: Upload injector Linux/darwin
        uses: actions/upload-artifact@v3
        if: matrix.settings.platform != 'windows'
        with:
          name: injector-${{ matrix.settings.platform }}-amd64
          path: packages/injector/zig-out/bin/injector

      - name: Upload injector Windows
        uses: actions/upload-artifact@v3
        if: matrix.settings.platform == 'windows'
        with:
          name: injector-${{ matrix.settings.platform }}-amd64
          path: packages/injector/zig-out/bin/injector.exe

      - name: Build loaders
        if: matrix.settings.platform == 'linux'
        run: cd packages/loaders && ./build.sh

      - name: Upload loaders Linux
        uses: actions/upload-artifact@v3
        if: matrix.settings.platform == 'linux'
        with:
          name: loaders
          path: packages/loaders/dist/

      - name: Build plugins
        if: matrix.settings.platform == 'linux'
        run: cd packages/plugins && ./build.sh

      - name: Upload plugins Linux
        uses: actions/upload-artifact@v3
        if: matrix.settings.platform == 'linux'
        with:
          name: plugins
          path: packages/plugins/dist/

      - name: Build core
        if: matrix.settings.platform == 'linux'
        run: make build-core

      - name: Upload core Linux
        uses: actions/upload-artifact@v3
        if: matrix.settings.platform == 'linux'
        with:
          name: core
          path: packages/core/dist/

  release:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Zip artifacts
        run: |
          zip -r installer-linux-amd64.zip artifacts/installer-linux-amd64
          zip -r installer-darwin-amd64.zip artifacts/installer-darwin-amd64
          zip -r installer-windows-amd64.zip artifacts/installer-windows-amd64
          zip -r injector-linux-amd64.zip artifacts/injector-linux-amd64
          zip -r injector-darwin-amd64.zip artifacts/injector-darwin-amd64
          zip -r injector-windows-amd64.zip artifacts/injector-windows-amd64
          zip -r core.zip artifacts/core

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            installer-linux-amd64.zip
            installer-darwin-amd64.zip
            installer-windows-amd64.zip
            injector-linux-amd64.zip
            injector-darwin-amd64.zip
            artifacts/loaders/loader-powercord-and-replugged.zip
            artifacts/plugins/plugin-plugin-zone.zip
            core.zip
          tag_name: canary

      - run: ls *

      - name: Push core to branch
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: hykord-dist
          folder: ./artifacts/core

      - name: Push plugins to branch
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: built-plugins
          folder: ./artifacts/plugins
